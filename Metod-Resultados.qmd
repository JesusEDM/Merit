---
title: "Metodología y Resultados"
subtitle: "Equipo Alfa de Cronbach"
author: "Jesús Díaz Molina-Benjamín Zavala"
format: html
editor: visual
lang: es
---

## Metodología

El análisis se organiza en 2 fases. La primera consta de un análisis factorial confirmatorio del instrumento que busca operacionalizar el modelo conceptual de meritocracia, a través de la encuesta EDUMER realizada en escuelas. En segundo lugar, se encuentra un análisis longitudinal considerando las 2 olas de encuestas; a partir de un análisis de invarianza entre olas.

```{r librerias, echo=FALSE}

pacman::p_load(tidyverse,
               sjmisc, 
               sjPlot,
               here,
               lavaan,
               psych,
               corrplot,
               ggdist,
               patchwork,
               sjlabelled,
               semTools,
               gtools,
               RColorBrewer,
               skimr,
               readxl,
               dplyr,
               summarytools,
               labelled,
               kableExtra)


options(scipen=999)
rm(list = ls())
```

#### 1. Datos

```{r cargar base, echo = FALSE}
load(file = here("Input", "data", "db_long_proc.RData"))
```

Los datos fueron extraídos de la encuesta panel longitudinal de Educación y Meritocracia (EDUMER). La encuesta EDUMER tiene como objetivo analizar el impacto de aspectos centrales del mercado educativo en las percepciones y creencias sobre la meritocracia, así como el impacto que puede tener dentro de la formación ciudadana. Esta fue realizada a nueve colegios chilenos, ubicados entre la Región Metropolitana y la Región de Valparaíso. Para esta encuesta se desarrollaron cuestionarios online en dos olas entre los años 2023 (ola 1) y 2024 (ola 2), aplicados a cursos de sexto básico y primero medio, que tras el cambio de año corresponden a séptimo básico y segundo medio. La primera ola presenta un N=839, mientras que la segunda un N=659, contando ambas con un tipo de muestra no probabilístico, por las características propias de cada colegio, que no llegan a ser representativas de la población escolar a nivel nacional.

#### 2. Variables

Las variables utilizadas para medir preferencias y percepciones tanto meritocráticas como no meritocráticas fueron operacionalizadas ocupando los ítems propuestos por Castillo et al (Castillo et al, 2023). Donde la percepción refiere a cómo se piensa que opera la meritocracia y la creencia en cómo debería ser la meritocracia. Los componentes meritocráticos refieren a cuestiones como talento (perc_talent ; pref_talent)  y esfuerzo (perc_effort ; pref_effort), mientras que los no meritocráticos a el tener padres ricos (perc_rich_parents ; pref_rich_parents) y tener buenos contactos (perc_contact ; pref_contact). Las categorías de respuesta de estas variables son en escala Likert que van del 1 “Muy en desacuerdo” al 4 “Muy de acuerdo“ de acuerdo a preguntas que vayan en relación con los componentes  mencionados. Por otra parte, se toman en consideración las variables referentes a la justicia de mercado, donde se pregunta por si el acceso a servicios debería estar condicionado por el dinero que pueda que pueda tener un individuo. Se toman en consideración los servicios de educación (just_educ), salud (just_health) y pensión (just_pension). Las categorías de respuesta son de tipo Likert donde 1 es “..” y 4 “... “.También se consideró el promedio de las 3 preguntas referentes a justicia de mercado (mjp)

La siguiente tabla muestra los porcentajes y cantidades de respuesta de cada una de las variables referentes a percepciones y preferencias meritocráticas, así como la afirmación realizada a la que debían expresar su grado de acuerdo:

```{r datos variables preferencias y percepciones, echo=FALSE}
pref_perc_subset <- db_long %>%       #crear subset
  select(perc_effort, perc_talent, perc_rich_parents, perc_contact, 
         pref_effort, pref_talent, pref_rich_parents, pref_contact) %>% 
  as.data.frame()

pref_perc_subset <- pref_perc_subset %>%
  mutate(
    across(
      everything(), # Aplica a todas las columnas
      ~ recode(.,
               '1' = "Muy en desacuerdo",
               '2' = "En desacuerdo",
               '3' = "De acuerdo",
               '4' = "Muy de acuerdo")
    )
  )

var_label(pref_perc_subset$perc_effort) <- "En Chile, las personas son recompensadas por sus esfuerzos"
var_label(pref_perc_subset$perc_talent) <- "En Chile, las personas son recompensadas por su inteligencia y habilidad"
var_label(pref_perc_subset$perc_rich_parents) <- "En Chile, a quienes tienen padres ricos les va mucho mejor en la vida"
var_label(pref_perc_subset$perc_contact) <- "En Chile, quienes tienen buenos contactos les va mejor en la vida"
var_label(pref_perc_subset$pref_effort) <- "Quienes más se esfuerzan deberían obtener mayores recompensas que quienes se esfuerzan menos"
var_label(pref_perc_subset$pref_talent) <- "Quienes poseen más talento deberían obtener mayores recompensas que quienes poseen menos talento"
var_label(pref_perc_subset$pref_rich_parents) <- "Está bien que quienes tienen padres ricos les vaya bien en la vida"
var_label(pref_perc_subset$pref_contact) <- "Esta bien que quienes tienen buenos contactos les vaya bien en la vida"

pref_perc_table<-dfSummary(pref_perc_subset[,],
               plain.ascii = FALSE,
               style = "multiline",
               tmp.img.dir = "/tmp",
               graph.magnif = 0.70,
               headings = F,  # encabezado
               varnumbers = F, # num variable
               labels.col = T, # etiquetas
               na.col = F,    # missing
               graph.col = F, # plot
               valid.col = T, # n valido
               col.widths = c(30,10,10,10))

pref_perc_table$Variable <- NULL # delete variable column

pref_perc_table
```

Por otro lado, la siguiente tabla muestra los porcentajes y cantidades de respuesta de cada una de las variables referentes a justicia de mercado, así como la afirmación realizada a la que debían expresar su grado de acuerdo:

```{r datos y variables preferencias justicia de mercado, echo=FALSE}
just_market <- db_long %>%       #crear subset
  select(just_health, just_pension, just_educ) %>% 
  as.data.frame()

just_market <- just_market %>%
  mutate(
    across(
      everything(), # Aplica a todas las columnas
      ~ recode(.,
               '1' = "Muy en desacuerdo",
               '2' = "En desacuerdo",
               '3' = "De acuerdo",
               '4' = "Muy de acuerdo")
    )
  )
var_label(just_market$just_health) <- "Está bien que aquellos que puedan pagar más tengan mejor acceso a salud"
var_label(just_market$just_pension) <- "Está bien que en Chile, las personas con mayores ingresos puedan tener mejores pensiones que las personas de ingresos más bajos"
var_label(just_market$just_educ) <- "Está bien que aquellos que puedan pagar más tengan mejor educación"


just_market_table<-dfSummary(just_market[,],
               plain.ascii = FALSE,
               style = "multiline",
               tmp.img.dir = "/tmp",
               graph.magnif = 0.70,
               headings = F,  # encabezado
               varnumbers = F, # num variable
               labels.col = T, # etiquetas
               na.col = F,    # missing
               graph.col = F, # plot
               valid.col = T, # n valido
               col.widths = c(30,10,10,10))

just_market_table$Variable <- NULL # delete variable column

just_market_table
```

#### 3. Métodos

## Resultados

#### 1. Univariados

```{r descriptivos ola 1, echo=FALSE}
t1 <- db_long %>% 
  filter(ola == 1) %>% 
  select(-c(1:3)) %>% 
  skim() %>% 
  yank("numeric") %>% 
  as_tibble() %>% 
  mutate(range = paste0("(",p0,"-",p100,")")) %>% 
  mutate_if(.predicate = is.numeric, .funs = ~ round(.,2)) %>% 
  select("Variable" = skim_variable,"Mean"= mean, "SD"=sd, "Range" = range, "Histogram"=hist) 

t1 %>% 
  kableExtra::kable(format = "markdown")
```

```{r descriptivos ola 2, echo=FALSE}
t2 <- db_long %>% 
  filter(ola == 2) %>% 
  select(-c(1:3)) %>% 
  skim() %>% 
  yank("numeric") %>% 
  as_tibble() %>% 
  mutate(range = paste0("(",p0,"-",p100,")")) %>% 
  mutate_if(.predicate = is.numeric, .funs = ~ round(.,2)) %>% 
  select("Variable" = skim_variable,"Mean"= mean, "SD"=sd, "Range" = range, "Histogram"=hist) 

t2 %>% 
  kableExtra::kable(format = "markdown")
```

```{r likert ola 1, echo=FALSE}

theme_set(theme_ggdist())
colors <- RColorBrewer::brewer.pal(n = 4, name = "RdBu")

a <- db_long %>% 
  filter(ola == 1) %>%
  select(starts_with("perc")) %>% 
  sjPlot::plot_likert(geom.colors = colors,
                      title = c("a. Percepciones"),
                      geom.size = 0.8,
                      axis.labels = c("Esfuerzo", "Talento", "Padres ricos", "Contactos"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE,
                      show.prc.sign = T
                      ) +
  ggplot2::theme(legend.position = "none")

b <- db_long %>% 
  filter(ola == 1) %>% 
  select(starts_with("pref")) %>% 
  sjPlot::plot_likert(geom.colors = colors,
                      title = c("b. Preferencias"),
                      geom.size = 0.8,
                     axis.labels = c("Esfuerzo", "Talento", "Padres ricos", "Contactos"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE,
                      show.prc.sign = T
  ) +
  ggplot2::theme(legend.position = "bottom")

likerplot1 <- a / b + plot_annotation(caption = paste0("Fuente: Elaboración propia en base a Encuesta Panel EDUMER Ola 1"," (n = ",dim(db_long[db_long$ola==1,])[1],")"
))

likerplot1
```

```{r likert ola 2,echo=FALSE}

theme_set(theme_ggdist())
colors <- RColorBrewer::brewer.pal(n = 4, name = "RdBu")

a <- db_long %>% 
  filter(ola == 2) %>%
  select(starts_with("perc")) %>% 
  sjPlot::plot_likert(geom.colors = colors,
                      title = c("a. Percepciones"),
                      geom.size = 0.8,
                      axis.labels = c("Esfuerzo", "Talento", "Padres ricos", "Contactos"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE,
                      show.prc.sign = T
                      ) +
  ggplot2::theme(legend.position = "none")

b <- db_long %>% 
  filter(ola == 2) %>% 
  select(starts_with("pref")) %>% 
  sjPlot::plot_likert(geom.colors = colors,
                      title = c("b. Preferencias"),
                      geom.size = 0.8,
                     axis.labels = c("Esfuerzo", "Talento", "Padres ricos", "Contactos"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE,
                      show.prc.sign = T
  ) +
  ggplot2::theme(legend.position = "bottom")

likerplot2 <- a / b + plot_annotation(caption = paste0("Fuente: Elaboración propia en base a Encuesta Panel EDUMER Ola 2"," (n = ",dim(db_long[db_long$ola==2,])[1],")"
))

likerplot2
```

#### 2. Bivariados

```{r correlaciones ola 1, echo=FALSE}
M <- psych::polychoric(db_long[db_long$ola==1,][c(4:11,15)])

P <- cor(db_long[db_long$ola==1,][c(4:11,15)], method = "pearson")

diag(M$rho) <- NA

diag(P) <- NA

M$rho[9,] <- P[9,]

rownames(M$rho) <- c("A. Percepción Esfuerzo",
                     "B. Percepción Talento",
                     "C. Percepción Padres Ricos",
                     "D. Percepción Contactos",
                     "E. Preferencias Esfuerzo",
                     "F. Preferencias Talento",
                     "G. Preferencias Padres Ricos",
                     "H. Preferencias Contactos",
                     "I. Market Justice Preferences")

#set Column names of the matrix
colnames(M$rho) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                       "(H)","(I)")

rownames(P) <- c("A. Percepción Esfuerzo",
                     "B. Percepción Talento",
                     "C. Percepción Padres Ricos",
                     "D. Percepción Contactos",
                     "E. Preferencias Esfuerzo",
                     "F. Preferencias Talento",
                     "G. Preferencias Padres Ricos",
                     "H. Preferencias Contactos",
                     "I. Market Justice Preferences")

#set Column names of the matrix
colnames(P) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                    "(H)","(I)")

testp <- cor.mtest(M$rho, conf.level = 0.95)

#Plot the matrix using corrplot
corrplot::corrplot(M$rho,
                   method = "color",
                   addCoef.col = "black",
                   type = "upper",
                   tl.col = "black",
                   col = colorRampPalette(c("#E16462", "white", "#0D0887"))(12),
                   bg = "white",
                   na.label = "-")
```

```{r correlaciones ola 2, echo=FALSE}
M2 <- psych::polychoric(db_long[db_long$ola==2,][c(4:11,15)])

P2 <- cor(db_long[db_long$ola==2,][c(4:11,15)], method = "pearson")

diag(M2$rho) <- NA

diag(P2) <- NA

M2$rho[9,] <- P[9,]

rownames(M2$rho) <- c("A. Percepción Esfuerzo",
                     "B. Percepción Talento",
                     "C. Percepción Padres Ricos",
                     "D. Percepción Contactos",
                     "E. Preferencias Esfuerzo",
                     "F. Preferencias Talento",
                     "G. Preferencias Padres Ricos",
                     "H. Preferencias Contactos",
                     "I. Market Justice Preferences")

#set Column names of the matrix
colnames(M2$rho) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                       "(H)","(I)")

rownames(P2) <- c("A. Percepción Esfuerzo",
                     "B. Percepción Talento",
                     "C. Percepción Padres Ricos",
                     "D. Percepción Contactos",
                     "E. Preferencias Esfuerzo",
                     "F. Preferencias Talento",
                     "G. Preferencias Padres Ricos",
                     "H. Preferencias Contactos",
                     "I. Market Justice Preferences")

#set Column names of the matrix
colnames(P2) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                    "(H)","(I)")

testp <- cor.mtest(M2$rho, conf.level = 0.95)

#Plot the matrix using corrplot
corrplot::corrplot(M2$rho,
                   method = "color",
                   addCoef.col = "black",
                   type = "upper",
                   tl.col = "black",
                   col = colorRampPalette(c("#E16462", "white", "#0D0887"))(12),
                   bg = "white",
                   na.label = "-")
```

#### 3. Multivariados

#### 3.1 CFA

```{r CFA ola 1 y 2, echo=FALSE}
# model
model_cfa <- '
  perc_merit = ~ perc_effort + perc_talent
  perc_nmerit = ~ perc_rich_parents + perc_contact
  pref_merit = ~ pref_effort + pref_talent
  pref_nmerit = ~ pref_rich_parents + pref_contact
  '

# estimation for each order set

m1_cfa <- cfa(model = model_cfa, 
              data = subset(db_long, ola == 1),
              estimator = "DWLS",
              ordered = T,
              std.lv = F) 

m2_cfa <- cfa(model = model_cfa, 
              data = subset(db_long, ola == 2), 
              estimator = "DWLS",
              ordered = T,
              std.lv = F)

summary(m1_cfa, fit.measures = T, standardized = T); summary(m2_cfa, fit.measures = T, standardized = T)
```

```{r cargas factoriales ola 1 y 2, echo=FALSE}
left_join(
standardizedsolution(m1_cfa) %>% 
  filter(op=="=~") %>%
  select(lhs,rhs,loadings_w01=est.std,pvalue_w01=pvalue),
standardizedsolution(m2_cfa) %>% 
  filter(op=="=~") %>%
  select(lhs,rhs,loadings_w02=est.std,pvalue_w02=pvalue)
) %>% 
  mutate(
    across(
      .cols = c(pvalue_w01, pvalue_w02),
      .fns = ~ case_when(
        . < 0.05 & . > 0.01 ~ "*",
        . <= 0.01 ~ "**",
        TRUE ~ "")
    ),
    loadings_w01 = paste(round(loadings_w01, 3), pvalue_w01, sep = " "),
    loadings_w02 = paste(round(loadings_w02, 3), pvalue_w02, sep = " "),
    lhs = case_when(
      lhs == "perc_merit" ~ "Percepción meritocrática",
      lhs == "perc_nmerit" ~ "Percepción no meritocrática",
      lhs == "pref_merit" ~ "Preferencia meritocrática",
      lhs == "pref_nmerit" ~ "Preferencia no meritocrática"),
    rhs = case_when(
      rhs == "perc_effort" ~ "Percepción esfuerzo",
      rhs == "perc_talent" ~ "Percepción talento",
      rhs == "perc_rich_parents" ~ "Percepción padres ricos",
      rhs == "perc_contact" ~ "Percepción contactos",
      rhs == "pref_effort" ~ "Preferencia esfuerzo",
      rhs == "pref_talent" ~ "Preferencia talento",
      rhs == "pref_rich_parents" ~ "Preferencia padres ricos",
      rhs == "pref_contact" ~ "Preferencia contactos"),
    simbol = "=~"
  ) %>% 
  select(lhs, simbol, rhs, loadings_w01, loadings_w02) %>% 
  kableExtra::kable(format = "markdown",
                    booktabs= T, 
                    escape = F, 
                    align = 'c',
                    col.names = c("Factor", "", "Indicador", "Cargas Ola 1", "Cargas Ola 2"),
                    caption = "Cargas factoriales en ambas Olas") %>% 
  kableExtra::add_footnote(label = "** p<0.01, * p<0.5", notation = "none")
```

#### 3.2 SEM

```{r modelo SEM, echo=FALSE}
## Especificar el modelo: medición y estructural
m_sem1 <- '
# Modelo medición
perc_merit = ~ perc_effort + perc_talent
perc_nmerit = ~ perc_rich_parents + perc_contact
pref_merit = ~ pref_effort + pref_talent
pref_nmerit = ~ pref_rich_parents + pref_contact

  # Modelo estructural
mjp ~  perc_merit + perc_nmerit + pref_merit + pref_nmerit
'

## Ajustar modelo
f_sem1 <- sem(m_sem1, data = subset(db_long, ola == 1))

## Ver resultados completos
summary(f_sem1, fit.measures = T, standardized = T)
```

#### 
