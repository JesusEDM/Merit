lhs = case_when(
lhs == "perc_merit" ~ "Percepción meritocrática",
lhs == "perc_nmerit" ~ "Percepción no meritocrática",
lhs == "pref_merit" ~ "Preferencia meritocrática",
lhs == "pref_nmerit" ~ "Preferencia no meritocrática"),
rhs = case_when(
rhs == "perc_effort" ~ "Percepción esfuerzo",
rhs == "perc_talent" ~ "Percepción talento",
rhs == "perc_rich_parents" ~ "Percepción padres ricos",
rhs == "perc_contact" ~ "Percepción contactos",
rhs == "pref_effort" ~ "Preferencia esfuerzo",
rhs == "pref_talent" ~ "Preferencia talento",
rhs == "pref_rich_parents" ~ "Preferencia padres ricos",
rhs == "pref_contact" ~ "Preferencia contactos"),
simbol = "=~"
) %>%
select(lhs, simbol, rhs, loadings_w01, loadings_w02) %>%
kableExtra::kable(format = "markdown",
booktabs= T,
escape = F,
align = 'c',
col.names = c("Factor", "", "Indicador", "Cargas Ola 1", "Cargas Ola 2"),
caption = "Cargas factoriales en ambas Olas") %>%
kableExtra::add_footnote(label = "** p<0.01, * p<0.5", notation = "none")
left_join(
standardizedsolution(m1_cfa) %>%
filter(op=="=~") %>%
select(lhs,rhs,loadings_w01=est.std,pvalue_w01=pvalue),
standardizedsolution(m2_cfa) %>%
filter(op=="=~") %>%
select(lhs,rhs,loadings_w02=est.std,pvalue_w02=pvalue)
) %>%
mutate(
across(
.cols = c(pvalue_w01, pvalue_w02),
.fns = ~ case_when(
. < 0.05 & . > 0.01 ~ "*",
. <= 0.01 ~ "**",
TRUE ~ "")
),
loadings_w01 = paste(round(loadings_w01, 3), pvalue_w01, sep = " "),
loadings_w02 = paste(round(loadings_w02, 3), pvalue_w02, sep = " "),
lhs = case_when(
lhs == "perc_merit" ~ "Percepción meritocrática",
lhs == "perc_nmerit" ~ "Percepción no meritocrática",
lhs == "pref_merit" ~ "Preferencia meritocrática",
lhs == "pref_nmerit" ~ "Preferencia no meritocrática"),
rhs = case_when(
rhs == "perc_effort" ~ "Percepción esfuerzo",
rhs == "perc_talent" ~ "Percepción talento",
rhs == "perc_rich_parents" ~ "Percepción padres ricos",
rhs == "perc_contact" ~ "Percepción contactos",
rhs == "pref_effort" ~ "Preferencia esfuerzo",
rhs == "pref_talent" ~ "Preferencia talento",
rhs == "pref_rich_parents" ~ "Preferencia padres ricos",
rhs == "pref_contact" ~ "Preferencia contactos"),
simbol = "=~"
) %>%
select(lhs, simbol, rhs, loadings_w01, loadings_w02) %>%
kableExtra::kable(format = "markdown",
booktabs= T,
escape = F,
align = 'c',
col.names = c("Factor", "", "Indicador", "Cargas Ola 1", "Cargas Ola 2"),
caption = "Cargas factoriales en ambas Olas") %>%
kableExtra::add_footnote(label = "** p<0.01, * p<0.5", notation = "none")
left_join(
standardizedsolution(m1_cfa) %>% filter(op=="=~") %>%
select(lhs,rhs,loadings_w01=est.std,pvalue_w01=pvalue),
standardizedsolution(m2_cfa) %>%
filter(op=="=~") %>%
select(lhs,rhs,loadings_w02=est.std,pvalue_w02=pvalue)
) %>%
mutate(
across(
.cols = c(pvalue_w01, pvalue_w02),
.fns = ~ case_when(
. < 0.05 & . > 0.01 ~ "*",
. <= 0.01 ~ "**",
TRUE ~ "")
),
loadings_w01 = paste(round(loadings_w01, 3), pvalue_w01, sep = " "),
loadings_w02 = paste(round(loadings_w02, 3), pvalue_w02, sep = " "),
lhs = case_when(
lhs == "perc_merit" ~ "Percepción meritocrática",
lhs == "perc_nmerit" ~ "Percepción no meritocrática",
lhs == "pref_merit" ~ "Preferencia meritocrática",
lhs == "pref_nmerit" ~ "Preferencia no meritocrática"),
rhs = case_when(
rhs == "perc_effort" ~ "Percepción esfuerzo",
rhs == "perc_talent" ~ "Percepción talento",
rhs == "perc_rich_parents" ~ "Percepción padres ricos",
rhs == "perc_contact" ~ "Percepción contactos",
rhs == "pref_effort" ~ "Preferencia esfuerzo",
rhs == "pref_talent" ~ "Preferencia talento",
rhs == "pref_rich_parents" ~ "Preferencia padres ricos",
rhs == "pref_contact" ~ "Preferencia contactos"),
simbol = "=~"
) %>%
select(lhs, simbol, rhs, loadings_w01, loadings_w02) %>%
kableExtra::kable(format = "markdown",
booktabs= T,
escape = F,
align = 'c',
col.names = c("Factor", "", "Indicador", "Cargas Ola 1", "Cargas Ola 2"),
caption = "Cargas factoriales en ambas Olas") %>%
kableExtra::add_footnote(label = "** p<0.01, * p<0.5", notation = "none")
left_join(
standardizedsolution(m1_cfa) %>% filter(op=="=~") %>%
select(lhs,rhs,loadings_w01=est.std,pvalue_w01=pvalue),
standardizedsolution(m2_cfa) %>% filter(op=="=~") %>% select(lhs,rhs,loadings_w02=est.std,pvalue_w02=pvalue)
) %>% mutate(
across(
.cols = c(pvalue_w01, pvalue_w02),
.fns = ~ case_when(
. < 0.05 & . > 0.01 ~ "*",
. <= 0.01 ~ "**",
TRUE ~ "")
),
loadings_w01 = paste(round(loadings_w01, 3), pvalue_w01, sep = " "),
loadings_w02 = paste(round(loadings_w02, 3), pvalue_w02, sep = " "),
lhs = case_when(
lhs == "perc_merit" ~ "Percepción meritocrática",
lhs == "perc_nmerit" ~ "Percepción no meritocrática",
lhs == "pref_merit" ~ "Preferencia meritocrática",
lhs == "pref_nmerit" ~ "Preferencia no meritocrática"),
rhs = case_when(
rhs == "perc_effort" ~ "Percepción esfuerzo",
rhs == "perc_talent" ~ "Percepción talento",
rhs == "perc_rich_parents" ~ "Percepción padres ricos",
rhs == "perc_contact" ~ "Percepción contactos",
rhs == "pref_effort" ~ "Preferencia esfuerzo",
rhs == "pref_talent" ~ "Preferencia talento",
rhs == "pref_rich_parents" ~ "Preferencia padres ricos",
rhs == "pref_contact" ~ "Preferencia contactos"),
simbol = "=~"
) %>%
select(lhs, simbol, rhs, loadings_w01, loadings_w02) %>%
kableExtra::kable(format = "markdown",
booktabs= T,
escape = F,
align = 'c',
col.names = c("Factor", "", "Indicador", "Cargas Ola 1", "Cargas Ola 2"),
caption = "Cargas factoriales en ambas Olas") %>%
kableExtra::add_footnote(label = "** p<0.01, * p<0.5", notation = "none")
left_join(
standardizedsolution(m1_cfa) %>% filter(op=="=~") %>%
select(lhs,rhs,loadings_w01=est.std,pvalue_w01=pvalue),
standardizedsolution(m2_cfa) %>% filter(op=="=~") %>% select(lhs,rhs,loadings_w02=est.std,pvalue_w02=pvalue)
) %>% mutate(
across(
.cols = c(pvalue_w01, pvalue_w02),
.fns = ~ case_when(
. < 0.05 & . > 0.01 ~ "*",
. <= 0.01 ~ "**",
TRUE ~ "")
),
loadings_w01 = paste(round(loadings_w01, 3), pvalue_w01, sep = " "),
loadings_w02 = paste(round(loadings_w02, 3), pvalue_w02, sep = " "),
lhs = case_when(
lhs == "perc_merit" ~ "Percepción meritocrática",
lhs == "perc_nmerit" ~ "Percepción no meritocrática",
lhs == "pref_merit" ~ "Preferencia meritocrática",
lhs == "pref_nmerit" ~ "Preferencia no meritocrática"),
rhs = case_when(
rhs == "perc_effort" ~ "Percepción esfuerzo",
rhs == "perc_talent" ~ "Percepción talento",
rhs == "perc_rich_parents" ~ "Percepción padres ricos",
rhs == "perc_contact" ~ "Percepción contactos",
rhs == "pref_effort" ~ "Preferencia esfuerzo",
rhs == "pref_talent" ~ "Preferencia talento",
rhs == "pref_rich_parents" ~ "Preferencia padres ricos",
rhs == "pref_contact" ~ "Preferencia contactos"),
simbol = "=~"
) %>% select(lhs, simbol, rhs, loadings_w01, loadings_w02) %>%
kableExtra::kable(format = "markdown",
booktabs= T,
escape = F,
align = 'c',
col.names = c("Factor", "", "Indicador", "Cargas Ola 1", "Cargas Ola 2"),
caption = "Cargas factoriales en ambas Olas") %>% kableExtra::add_footnote(label = "** p<0.01, * p<0.5", notation = "none")
# model
model_cfa <- '
perc_merit = ~ perc_effort + perc_talent
perc_nmerit = ~ perc_rich_parents + perc_contact
pref_merit = ~ pref_effort + pref_talent
pref_nmerit = ~ pref_rich_parents + pref_contact
'
m1_cfa <- cfa(model = model_cfa,
data = subset(db_long, ola == 1),
estimator = "DWLS",
ordered = T,
std.lv = F)
library(lavaan)
perc_merit = ~ perc_effort + perc_talent
# model
model_cfa <- '
perc_merit = ~ perc_effort + perc_talent
perc_nmerit = ~ perc_rich_parents + perc_contact
pref_merit = ~ pref_effort + pref_talent
pref_nmerit = ~ pref_rich_parents + pref_contact
'
m1_cfa <- cfa(model = model_cfa,
data = subset(db_long, ola == 1),
estimator = "DWLS",
ordered = T,
std.lv = F)
m2_cfa <- cfa(model = model_cfa,
data = subset(db_long, ola == 2),
estimator = "DWLS",
ordered = T,
std.lv = F)
summary(m1_cfa, fit.measures = T, standardized = T); summary(m2_cfa, fit.measures = T, standardized = T)
left_join(
standardizedsolution(m1_cfa) %>%
filter(op=="=~") %>%
select(lhs,rhs,loadings_w01=est.std,pvalue_w01=pvalue),
standardizedsolution(m2_cfa) %>%
filter(op=="=~") %>%
select(lhs,rhs,loadings_w02=est.std,pvalue_w02=pvalue)
) %>%
mutate(
across(
.cols = c(pvalue_w01, pvalue_w02),
.fns = ~ case_when(
. < 0.05 & . > 0.01 ~ "*",
. <= 0.01 ~ "**",
TRUE ~ "")
),
loadings_w01 = paste(round(loadings_w01, 3), pvalue_w01, sep = " "),
loadings_w02 = paste(round(loadings_w02, 3), pvalue_w02, sep = " "),
lhs = case_when(
lhs == "perc_merit" ~ "Percepción meritocrática",
lhs == "perc_nmerit" ~ "Percepción no meritocrática",
lhs == "pref_merit" ~ "Preferencia meritocrática",
lhs == "pref_nmerit" ~ "Preferencia no meritocrática"),
rhs = case_when(
rhs == "perc_effort" ~ "Percepción esfuerzo",
rhs == "perc_talent" ~ "Percepción talento",
rhs == "perc_rich_parents" ~ "Percepción padres ricos",
rhs == "perc_contact" ~ "Percepción contactos",
rhs == "pref_effort" ~ "Preferencia esfuerzo",
rhs == "pref_talent" ~ "Preferencia talento",
rhs == "pref_rich_parents" ~ "Preferencia padres ricos",
rhs == "pref_contact" ~ "Preferencia contactos"),
simbol = "=~"
) %>%
select(lhs, simbol, rhs, loadings_w01, loadings_w02) %>%
kableExtra::kable(format = "markdown",
booktabs= T,
escape = F,
align = 'c',
col.names = c("Factor", "", "Indicador", "Cargas Ola 1", "Cargas Ola 2"),
caption = "Cargas factoriales en ambas Olas") %>%
kableExtra::add_footnote(label = "** p<0.01, * p<0.5", notation = "none")
## Especificar el modelo: medición y estructural
m_sem1 <- '
# Modelo medición
# Modelo medición
perc_merit = ~ perc_effort + perc_talent
perc_nmerit = ~ perc_rich_parents + perc_contact
pref_merit = ~ pref_effort + pref_talent
pref_nmerit = ~ pref_rich_parents + pref_contact
# Modelo estructural
# Modelo estructural
mjp ~  perc_merit + perc_nmerit + pref_merit + pref_nmerit
'
## Ajustar modelo
f_sem1 <- sem(m_sem1, data = subset(db_long, ola == 1))
## Ver resultados completos
summary(f_sem1, fit.measures = T, standardized = T)
inv01 <- semTools::measurementInvariance(model = model_cfa,
data = db,
group = "curse_level",
estimator = "ML",
strict = T,
quiet = T)
left_join(
standardizedsolution(m1_cfa) %>%
filter(op=="=~") %>%
select(lhs,rhs,loadings_w01=est.std,pvalue_w01=pvalue),
standardizedsolution(m2_cfa) %>%
filter(op=="=~") %>%
select(lhs,rhs,loadings_w02=est.std,pvalue_w02=pvalue)
) %>%
mutate(
across(
.cols = c(pvalue_w01, pvalue_w02),
.fns = ~ case_when(
. < 0.05 & . > 0.01 ~ "*",
. <= 0.01 ~ "**",
TRUE ~ "")
),
loadings_w01 = paste(round(loadings_w01, 3), pvalue_w01, sep = " "),
loadings_w02 = paste(round(loadings_w02, 3), pvalue_w02, sep = " "),
lhs = case_when(
lhs == "perc_merit" ~ "Percepción meritocrática",
lhs == "perc_nmerit" ~ "Percepción no meritocrática",
lhs == "pref_merit" ~ "Preferencia meritocrática",
lhs == "pref_nmerit" ~ "Preferencia no meritocrática"),
rhs = case_when(
rhs == "perc_effort" ~ "Percepción esfuerzo",
rhs == "perc_talent" ~ "Percepción talento",
rhs == "perc_rich_parents" ~ "Percepción padres ricos",
rhs == "perc_contact" ~ "Percepción contactos",
rhs == "pref_effort" ~ "Preferencia esfuerzo",
rhs == "pref_talent" ~ "Preferencia talento",
rhs == "pref_rich_parents" ~ "Preferencia padres ricos",
rhs == "pref_contact" ~ "Preferencia contactos"),
simbol = "=~"
) %>%
select(lhs, simbol, rhs, loadings_w01, loadings_w02) %>%
kableExtra::kable(format = "markdown",
booktabs= T,
escape = F,
align = 'c',
col.names = c("Factor", "", "Indicador", "Cargas Ola 1", "Cargas Ola 2"),
caption = "Cargas factoriales en ambas Olas") %>%
kableExtra::add_footnote(label = "** p<0.01, * p<0.5", notation = "none")
left_join(
standardizedsolution(m1_cfa) %>%
filter(op=="=~") %>% select(lhs,rhs,loadings_w01=est.std,pvalue_w01=pvalue),
standardizedsolution(m2_cfa) %>%
filter(op=="=~") %>%
select(lhs,rhs,loadings_w02=est.std,pvalue_w02=pvalue)
) %>%
mutate(
across(
.cols = c(pvalue_w01, pvalue_w02),
.fns = ~ case_when(
. < 0.05 & . > 0.01 ~ "*",
. <= 0.01 ~ "**",
TRUE ~ "")
),
loadings_w01 = paste(round(loadings_w01, 3), pvalue_w01, sep = " "),
loadings_w02 = paste(round(loadings_w02, 3), pvalue_w02, sep = " "),
lhs = case_when(
lhs == "perc_merit" ~ "Percepción meritocrática",
lhs == "perc_nmerit" ~ "Percepción no meritocrática",
lhs == "pref_merit" ~ "Preferencia meritocrática",
lhs == "pref_nmerit" ~ "Preferencia no meritocrática"),
rhs = case_when(
rhs == "perc_effort" ~ "Percepción esfuerzo",
rhs == "perc_talent" ~ "Percepción talento",
rhs == "perc_rich_parents" ~ "Percepción padres ricos",
rhs == "perc_contact" ~ "Percepción contactos",
rhs == "pref_effort" ~ "Preferencia esfuerzo",
rhs == "pref_talent" ~ "Preferencia talento",
rhs == "pref_rich_parents" ~ "Preferencia padres ricos",
rhs == "pref_contact" ~ "Preferencia contactos"),
simbol = "=~"
) %>%
select(lhs, simbol, rhs, loadings_w01, loadings_w02) %>%
kableExtra::kable(format = "markdown",
booktabs= T,
escape = F,
align = 'c',
col.names = c("Factor", "", "Indicador", "Cargas Ola 1", "Cargas Ola 2"),
caption = "Cargas factoriales en ambas Olas") %>%
kableExtra::add_footnote(label = "** p<0.01, * p<0.5", notation = "none")
library(dplyr)
left_join(
standardizedsolution(m1_cfa) %>%
filter(op=="=~") %>% select(lhs,rhs,loadings_w01=est.std,pvalue_w01=pvalue),
standardizedsolution(m2_cfa) %>%
filter(op=="=~") %>%
select(lhs,rhs,loadings_w02=est.std,pvalue_w02=pvalue)
) %>%
mutate(
across(
.cols = c(pvalue_w01, pvalue_w02),
.fns = ~ case_when(
. < 0.05 & . > 0.01 ~ "*",
. <= 0.01 ~ "**",
TRUE ~ "")
),
loadings_w01 = paste(round(loadings_w01, 3), pvalue_w01, sep = " "),
loadings_w02 = paste(round(loadings_w02, 3), pvalue_w02, sep = " "),
lhs = case_when(
lhs == "perc_merit" ~ "Percepción meritocrática",
lhs == "perc_nmerit" ~ "Percepción no meritocrática",
lhs == "pref_merit" ~ "Preferencia meritocrática",
lhs == "pref_nmerit" ~ "Preferencia no meritocrática"),
rhs = case_when(
rhs == "perc_effort" ~ "Percepción esfuerzo",
rhs == "perc_talent" ~ "Percepción talento",
rhs == "perc_rich_parents" ~ "Percepción padres ricos",
rhs == "perc_contact" ~ "Percepción contactos",
rhs == "pref_effort" ~ "Preferencia esfuerzo",
rhs == "pref_talent" ~ "Preferencia talento",
rhs == "pref_rich_parents" ~ "Preferencia padres ricos",
rhs == "pref_contact" ~ "Preferencia contactos"),
simbol = "=~"
) %>%
select(lhs, simbol, rhs, loadings_w01, loadings_w02) %>%
kableExtra::kable(format = "markdown",
booktabs= T,
escape = F,
align = 'c',
col.names = c("Factor", "", "Indicador", "Cargas Ola 1", "Cargas Ola 2"),
caption = "Cargas factoriales en ambas Olas") %>%
kableExtra::add_footnote(label = "** p<0.01, * p<0.5", notation = "none")
left_join(
standardizedsolution(m1_cfa) %>%
filter(op=="=~") %>% select(lhs,rhs,loadings_w01=est.std,pvalue_w01=pvalue),
standardizedsolution(m2_cfa) %>%
filter(op=="=~") %>%
select(lhs,rhs,loadings_w02=est.std,pvalue_w02=pvalue)
) %>%
mutate(
across(
.cols = c(pvalue_w01, pvalue_w02),
.fns = ~ case_when(
. < 0.05 & . > 0.01 ~ "*",
. <= 0.01 ~ "**",
TRUE ~ "")
),
loadings_w01 = paste(round(loadings_w01, 3), pvalue_w01, sep = " "),
loadings_w02 = paste(round(loadings_w02, 3), pvalue_w02, sep = " "),
lhs = case_when(
lhs == "perc_merit" ~ "Percepción meritocrática",
lhs == "perc_nmerit" ~ "Percepción no meritocrática",
lhs == "pref_merit" ~ "Preferencia meritocrática",
lhs == "pref_nmerit" ~ "Preferencia no meritocrática"),
rhs = case_when(
rhs == "perc_effort" ~ "Percepción esfuerzo",
rhs == "perc_talent" ~ "Percepción talento",
rhs == "perc_rich_parents" ~ "Percepción padres ricos",
rhs == "perc_contact" ~ "Percepción contactos",
rhs == "pref_effort" ~ "Preferencia esfuerzo",
rhs == "pref_talent" ~ "Preferencia talento",
rhs == "pref_rich_parents" ~ "Preferencia padres ricos",
rhs == "pref_contact" ~ "Preferencia contactos"),
simbol = "=~"
) %>%
select(lhs, simbol, rhs, loadings_w01, loadings_w02) %>%
kableExtra::kable(format = "markdown",
booktabs= T,
escape = F,
align = 'c',
col.names = c("Factor", "", "Indicador", "Cargas Ola 1", "Cargas Ola 2"),
caption = "Cargas factoriales en ambas Olas") %>%
kableExtra::add_footnote(label = "** p<0.01, * p<0.5", notation = "none")
## Especificar el modelo: medición y estructural
m_sem1 <- '
# Modelo medición
# Modelo medición
perc_merit = ~ perc_effort + perc_talent
perc_nmerit = ~ perc_rich_parents + perc_contact
pref_merit = ~ pref_effort + pref_talent
pref_nmerit = ~ pref_rich_parents + pref_contact
# Modelo estructural
# Modelo estructural
mjp ~  perc_merit + perc_nmerit + pref_merit + pref_nmerit
'
## Ajustar modelo
f_sem1 <- sem(m_sem1, data = subset(db_long, ola == 1))
## Ver resultados completos
summary(f_sem1, fit.measures = T, standardized = T)
inv01 <- semTools::measurementInvariance(model = model_cfa,
data = db,
group = "curse_level",
estimator = "ML",
strict = T,
quiet = T)
inv01 <- semTools::measurementInvariance(model = model_cfa,
data = db_long,
group = "curse_level",
estimator = "ML",
strict = T,
quiet = T)
conf <- inv01$fit.configural
weak <- inv01$fit.loadings
strong <- inv01$fit.intercepts
strict <- inv01$fit.residuals
tab01 <- lavaan::anova(conf,weak,strong,strict,SB.classic=TRUE) %>%
dplyr::as_tibble() %>%
dplyr::select("Chisq","Df","chisq_diff"=`Chisq diff`,"df_diff"=`Df diff`,"pvalue"=`Pr(>Chisq)`) %>%
dplyr::mutate(stars=gtools::stars.pval(pvalue),
chisqt=paste0(round(Chisq,2)," (",Df,") "),
decision=ifelse(pvalue>0.05,yes = "Accept",no = "Reject"),
model=c("Configural","Weak","Strong","Strict"))
fit.meas <- dplyr::bind_rows(lavaan::fitmeasures(inv01$fit.configural,output ="matrix")[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper"),],
lavaan::fitmeasures(inv01$fit.loadings,  output ="matrix")[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper"),],
lavaan::fitmeasures(inv01$fit.intercepts,output ="matrix")[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper"),],
lavaan::fitmeasures(inv01$fit.residuals, output ="matrix")[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper"),])
# compute differences in chisq, df, cfi and rmsea (90%, lower.ci - upper.ci )
fit.meas <- fit.meas %>%
dplyr::mutate(diff.chi2 = chisq    - lag(chisq,default = dplyr::first(chisq)),
diff.df   = df       - lag(df,   default = dplyr::first(df)),
diff.cfi  = cfi      - lag(cfi,  default = dplyr::first(cfi)),
diff.rmsea   = rmsea - lag(rmsea,default = dplyr::first(rmsea))) %>%
round(3) %>%
dplyr::mutate(rmsea.ci=paste0(rmsea," \n ", "(",rmsea.ci.lower,"-",rmsea.ci.upper,")"))
tab.inv <- dplyr::bind_cols(tab01,fit.meas) %>%
dplyr::select(model,chisqt,cfi,rmsea.ci,diff.chi2,diff.df,diff.cfi,diff.rmsea,stars,decision) %>%
dplyr::mutate(diff.chi2=paste0(diff.chi2," (",diff.df,") ",stars)) %>%
dplyr::select(model,chisqt,cfi,rmsea.ci,diff.chi2,diff.cfi,diff.rmsea,decision)
#clean values
tab.inv[tab.inv == c("0 (0) ")] <- NA
tab.inv[tab.inv == c(0)] <- NA
col.nam <- c("Model","$\\chi^2 (\\text{df})$","CFI","RMSEA (90 CI)",
"$\\Delta \\chi^2 (\\Delta \\text{df}$)","$\\Delta \\text{CFI}$","$\\Delta \\text{RMSEA}$","Decision")
footnote <- paste0("N = 839; Group 1, n = ",conf@Data@nobs[[1]],"; Group 2, n = ",conf@Data@nobs[[2]])
knitr::kable(tab.inv, col.names = col.nam, align = "l",
booktabs=TRUE,format = "html",escape = FALSE,
caption = "t") %>%
kableExtra::kable_styling(full_width = FALSE,
latex_options = "HOLD_position",
bootstrap_options=c("striped", "bordered"),
font_size = 10) %>%
kableExtra::footnote(general = footnote, footnote_as_chunk = T)
