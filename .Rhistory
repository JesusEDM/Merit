# Modelo medici√≥n
perc_merit = ~ perc_effort + perc_talent
perc_nmerit = ~ perc_rich_parents + perc_contact
pref_merit = ~ pref_effort + pref_talent
pref_nmerit = ~ pref_rich_parents + pref_contact
# Modelo estructural
# Modelo estructural
mjp ~  perc_merit + perc_nmerit + pref_merit + pref_nmerit
'
## Ajustar modelo
f_sem1 <- sem(m_sem1, data = subset(db_long, ola == 1))
## Ver resultados completos
summary(f_sem1, fit.measures = T, standardized = T)
View(db_long)
#| tbl-cap: "Individual level variables"
#| label: tbl-perc-pref
pref_perc_subset <- db_long %>% dplyr::select(perc_effort, perc_talent, perc_rich_parents, perc_contact, pref_effort, pref_talent, pref_ rich_parents, pref_contact)
#| tbl-cap: "Individual level variables"
#| label: tbl-perc-pref
pref_perc_subset <- db_long %>%
dplyr::select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact)
#| tbl-cap: "Individual level variables"
#| label: tbl-perc-pref
pref_perc_subset <- db_long %>% dplyr::select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact)
#| tbl-cap: "Individual level variables"
#| label: tbl-perc-pref
library(dplyr)
pref_perc_subset <- db_long %>% dplyr::select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact)
df<-dfSummary(pref_perc_subset[,-8],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
pacman::p_load(tidyverse,
sjmisc,
sjPlot,
here,
lavaan,
psych,
corrplot,
ggdist,
patchwork,
sjlabelled,
semTools,
gtools,
RColorBrewer,
skimr,
readxl,
dplyr,
summarytools)
df<-dfSummary(pref_perc_subset[,-8],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
pref_perc_subset_values <- pref_perc_subset %>%
summarise(across(everything(), ~ paste(unique(.), collapse = ", ")))
df<-dfSummary(pref_perc_subset[,-8],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df<-dfSummary(pref_perc_subset_values[,-8],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
# Renombrar los valores de las variables seleccionadas
pref_perc_subset_values <- pref_perc_subset_values %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
`1` = "Muy en desacuerdo",
`2` = "En desacuerdo",
`3` = "De acuerdo",
`4` = "Muy de acuerdo"
)
)
)
df<-dfSummary(pref_perc_subset_values[,-8],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
# Renombrar los valores de las variables seleccionadas
pref_perc_subset_values <- pref_perc_subset_values %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
`1` = "Muy en desacuerdo",
`2` = "En desacuerdo",
`3` = "De acuerdo",
`4` = "Muy de acuerdo"
)
)
)
df<-dfSummary(pref_perc_subset_values[,-8],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
View(pref_perc_subset_values)
rm(list = ls())
pacman::p_load(tidyverse,
sjmisc,
sjPlot,
here,
lavaan,
psych,
corrplot,
ggdist,
patchwork,
sjlabelled,
semTools,
gtools,
RColorBrewer,
skimr,
readxl,
dplyr,
summarytools)
pacman::p_load(tidyverse,
sjmisc,
sjPlot,
here,
lavaan,
psych,
corrplot,
ggdist,
patchwork,
sjlabelled,
semTools,
gtools,
RColorBrewer,
skimr,
readxl,
dplyr,
summarytools)
options(scipen=999)
rm(list = ls())
load(file = here("Input", "data", "db_long_proc.RData"))
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact)
View(pref_perc_subset)
pref_perc_subset <- pref_perc_subset %>%
mutate(perc_effort = car::recode(perc_effort,
recodes = c ('1' = "Muy en desacuerdo", '2' = "En desacuerdo",
'3' = "De acuerdo", '4' = "Muy de acuerdo")))
pref_perc_subset <- pref_perc_subset %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
`1` = "Muy en desacuerdo",
`2` = "En desacuerdo",
`3` = "De acuerdo",
`4` = "Muy de acuerdo")
)
)
View(pref_perc_subset)
df<-dfSummary(pref_perc_subset[,-8],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
View(db_long)
df<-dfSummary(db_long[,-8],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset <- pref_perc_subset %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
`1` = "Muy en desacuerdo",
`2` = "En desacuerdo",
`3` = "De acuerdo",
`4` = "Muy de acuerdo")
)
)
df<-dfSummary(db_long[,-8],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df<-dfSummary(pref_perc_subset[,-8],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
View(df)
rm(list = ls())
load(file = here("Input", "data", "db_long_proc.RData"))
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
View(pref_perc_subset)
pref_perc_subset <- pref_perc_subset %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
`1` = "Muy en desacuerdo",
`2` = "En desacuerdo",
`3` = "De acuerdo",
`4` = "Muy de acuerdo")
)
)
View(pref_perc_subset)
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
View(pref_perc_subset)
pref_perc_subset <- pref_perc_subset %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
'1' = "Muy en desacuerdo",
'2' = "En desacuerdo",
'3' = "De acuerdo",
'4' = "Muy de acuerdo")
)
)
View(pref_perc_subset)
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset <- pref_perc_subset %>%
mutate(perc_effort = recode(perc_effort,
'1' = "Muy en desacuerdo",
'2' = "En desacuerdo",
'3' = "De acuerdo",
'4' = "Muy de acuerdo")
)
df<-dfSummary(pref_perc_subset[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset <- pref_perc_subset %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
'1' = "Muy en desacuerdo",
'2' = "En desacuerdo",
'3' = "De acuerdo",
'4' = "Muy de acuerdo")
)
)
df<-dfSummary(pref_perc_subset[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
df$Variable <- NULL # delete variable column
print(df)
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset$perc_effort <- recode(pref_perc_subset$perc_effort,
"1 = 'Muy en desacuerdo';
2 = 'En desacuerdo';
3 = 'De acuerdo';
4 = 'Muy de acuerdo'")
pref_perc_subset$perc_effort <- recode(pref_perc_subset$perc_effort,
"1 = 'Muy en desacuerdo';
2 = 'En desacuerdo';
3 = 'De acuerdo';
4 = 'Muy de acuerdo'")
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset$perc_effort <- recode(pref_perc_subset$perc_effort,
"1 = 'Muy en desacuerdo';
2 = 'En desacuerdo';
3 = 'De acuerdo';
4 = 'Muy de acuerdo'")
ref_perc_subset$perc_effort <- recode(pref_perc_subset$perc_effort,
"1 = 'Muy en desacuerdo';
2 = 'En desacuerdo';
3 = 'De acuerdo';
4 = 'Muy de acuerdo'")
pref_perc_subset$perc_effort <- recode(pref_perc_subset$perc_effort,
"1 = 'Muy en desacuerdo';
2 = 'En desacuerdo';
3 = 'De acuerdo';
4 = 'Muy de acuerdo'")
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset <- pref_perc_subset %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
'1' = "Muy en desacuerdo",
'2' = "En desacuerdo",
'3' = "De acuerdo",
'4' = "Muy de acuerdo")
)
)
df<-dfSummary(pref_perc_subset[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
var_label(pref_perc_subset$perc_effort) <- "Porcentaje de esfuerzo"
var_label(pref_perc_subset$perc_talent) <- "Porcentaje de talento"
pacman::p_load(tidyverse,
sjmisc,
sjPlot,
here,
lavaan,
psych,
corrplot,
ggdist,
patchwork,
sjlabelled,
semTools,
gtools,
RColorBrewer,
skimr,
readxl,
dplyr,
summarytools,
labelled)
var_label(pref_perc_subset$perc_effort) <- "Porcentaje de esfuerzo"
var_label(pref_perc_subset$perc_talent) <- "Porcentaje de talento"
var_label(pref_perc_subset$perc_rich_parents) <- "Porcentaje de padres ricos"
var_label(pref_perc_subset$perc_contact) <- "Porcentaje de contactos"
df<-dfSummary(pref_perc_subset[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset <- pref_perc_subset %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
'1' = "Muy en desacuerdo",
'2' = "En desacuerdo",
'3' = "De acuerdo",
'4' = "Muy de acuerdo")
)
)
var_label(pref_perc_subset$perc_effort) <- "En Chile, las personas son recompensadas por sus esfuerzos"
var_label(pref_perc_subset$perc_talent) <- "En Chile, las personas son recompensadas por su inteligencia y habilidad"
var_label(pref_perc_subset$perc_rich_parents) <- "En Chile, a quienes tienen padres ricos les va mucho mejor en la vida"
var_label(pref_perc_subset$pref_contact) <- "En Chile, quienes tienen buenos contactos les va mejor en la vida"
var_label(pref_perc_subset$pref_effort) <- "Quienes m√°s se esfuerzan deber√≠an obtener mayores recompensas que quienes se esfuerzan menos"
var_label(pref_perc_subset$pref_talent) <- "Quienes poseen m√°s talento deber√≠an obtener mayores recompensas que quienes poseen menos talento"
var_label(pref_perc_subset$pref_rich_parents) <- "Est√° bien que quienes tienen padres ricos les vaya bien en la vida"
var_label(pref_perc_subset$pref_contact) <- "Esta bien que quienes tienen buenos contactos les vaya bien en la vida"
df<-dfSummary(pref_perc_subset[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
