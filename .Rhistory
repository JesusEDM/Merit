plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
View(db_long)
df<-dfSummary(db_long[,-8],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset <- pref_perc_subset %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
`1` = "Muy en desacuerdo",
`2` = "En desacuerdo",
`3` = "De acuerdo",
`4` = "Muy de acuerdo")
)
)
df<-dfSummary(db_long[,-8],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df<-dfSummary(pref_perc_subset[,-8],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
View(df)
rm(list = ls())
load(file = here("Input", "data", "db_long_proc.RData"))
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
View(pref_perc_subset)
pref_perc_subset <- pref_perc_subset %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
`1` = "Muy en desacuerdo",
`2` = "En desacuerdo",
`3` = "De acuerdo",
`4` = "Muy de acuerdo")
)
)
View(pref_perc_subset)
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
View(pref_perc_subset)
pref_perc_subset <- pref_perc_subset %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
'1' = "Muy en desacuerdo",
'2' = "En desacuerdo",
'3' = "De acuerdo",
'4' = "Muy de acuerdo")
)
)
View(pref_perc_subset)
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset <- pref_perc_subset %>%
mutate(perc_effort = recode(perc_effort,
'1' = "Muy en desacuerdo",
'2' = "En desacuerdo",
'3' = "De acuerdo",
'4' = "Muy de acuerdo")
)
df<-dfSummary(pref_perc_subset[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset <- pref_perc_subset %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
'1' = "Muy en desacuerdo",
'2' = "En desacuerdo",
'3' = "De acuerdo",
'4' = "Muy de acuerdo")
)
)
df<-dfSummary(pref_perc_subset[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
df$Variable <- NULL # delete variable column
print(df)
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset$perc_effort <- recode(pref_perc_subset$perc_effort,
"1 = 'Muy en desacuerdo';
2 = 'En desacuerdo';
3 = 'De acuerdo';
4 = 'Muy de acuerdo'")
pref_perc_subset$perc_effort <- recode(pref_perc_subset$perc_effort,
"1 = 'Muy en desacuerdo';
2 = 'En desacuerdo';
3 = 'De acuerdo';
4 = 'Muy de acuerdo'")
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset$perc_effort <- recode(pref_perc_subset$perc_effort,
"1 = 'Muy en desacuerdo';
2 = 'En desacuerdo';
3 = 'De acuerdo';
4 = 'Muy de acuerdo'")
ref_perc_subset$perc_effort <- recode(pref_perc_subset$perc_effort,
"1 = 'Muy en desacuerdo';
2 = 'En desacuerdo';
3 = 'De acuerdo';
4 = 'Muy de acuerdo'")
pref_perc_subset$perc_effort <- recode(pref_perc_subset$perc_effort,
"1 = 'Muy en desacuerdo';
2 = 'En desacuerdo';
3 = 'De acuerdo';
4 = 'Muy de acuerdo'")
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset <- pref_perc_subset %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
'1' = "Muy en desacuerdo",
'2' = "En desacuerdo",
'3' = "De acuerdo",
'4' = "Muy de acuerdo")
)
)
df<-dfSummary(pref_perc_subset[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
var_label(pref_perc_subset$perc_effort) <- "Porcentaje de esfuerzo"
var_label(pref_perc_subset$perc_talent) <- "Porcentaje de talento"
pacman::p_load(tidyverse,
sjmisc,
sjPlot,
here,
lavaan,
psych,
corrplot,
ggdist,
patchwork,
sjlabelled,
semTools,
gtools,
RColorBrewer,
skimr,
readxl,
dplyr,
summarytools,
labelled)
var_label(pref_perc_subset$perc_effort) <- "Porcentaje de esfuerzo"
var_label(pref_perc_subset$perc_talent) <- "Porcentaje de talento"
var_label(pref_perc_subset$perc_rich_parents) <- "Porcentaje de padres ricos"
var_label(pref_perc_subset$perc_contact) <- "Porcentaje de contactos"
df<-dfSummary(pref_perc_subset[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
pref_perc_subset <- db_long %>%       #crear subset
select(perc_effort, perc_talent, perc_rich_parents, perc_contact,
pref_effort, pref_talent, pref_rich_parents, pref_contact) %>%
as.data.frame()
pref_perc_subset <- pref_perc_subset %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
'1' = "Muy en desacuerdo",
'2' = "En desacuerdo",
'3' = "De acuerdo",
'4' = "Muy de acuerdo")
)
)
var_label(pref_perc_subset$perc_effort) <- "En Chile, las personas son recompensadas por sus esfuerzos"
var_label(pref_perc_subset$perc_talent) <- "En Chile, las personas son recompensadas por su inteligencia y habilidad"
var_label(pref_perc_subset$perc_rich_parents) <- "En Chile, a quienes tienen padres ricos les va mucho mejor en la vida"
var_label(pref_perc_subset$pref_contact) <- "En Chile, quienes tienen buenos contactos les va mejor en la vida"
var_label(pref_perc_subset$pref_effort) <- "Quienes más se esfuerzan deberían obtener mayores recompensas que quienes se esfuerzan menos"
var_label(pref_perc_subset$pref_talent) <- "Quienes poseen más talento deberían obtener mayores recompensas que quienes poseen menos talento"
var_label(pref_perc_subset$pref_rich_parents) <- "Está bien que quienes tienen padres ricos les vaya bien en la vida"
var_label(pref_perc_subset$pref_contact) <- "Esta bien que quienes tienen buenos contactos les vaya bien en la vida"
df<-dfSummary(pref_perc_subset[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.75,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df$Variable <- NULL # delete variable column
print(df)
var_label(pref_perc_subset$perc_contact) <- "En Chile, quienes tienen buenos contactos les va mejor en la vida"
pref_perc_table <-dfSummary(pref_perc_subset[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.70,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
df %>%
kable(format = "html", caption = "Resumen de Preferencias y Porcentajes") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE, position = "center") %>%
column_spec(1, bold = TRUE, color = "blue") %>%
add_header_above(c(" " = 1, "Preferencias" = 3)) # Agrupar columnas
pacman::p_load(tidyverse,
sjmisc,
sjPlot,
here,
lavaan,
psych,
corrplot,
ggdist,
patchwork,
sjlabelled,
semTools,
gtools,
RColorBrewer,
skimr,
readxl,
dplyr,
summarytools,
labelled,
kableExtra)
df %>%
kable(format = "html", caption = "Resumen de Preferencias y Porcentajes") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE, position = "center") %>%
column_spec(1, bold = TRUE, color = "blue") %>%
add_header_above(c(" " = 1, "Preferencias" = 3)) # Agrupar columnas
df %>%
kable(format = "html", caption = "Resumen de Preferencias y Porcentajes") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE, position = "center") %>%
column_spec(1, bold = TRUE, color = "blue") %>%
add_header_above(c(" " = 1, "Preferencias" = 3)) # Agrupar columnas
print(df)
var_label(pref_perc_subset$pref_contact) <- "En Chile, quienes tienen buenos contactos les va mejor en la vida"
var_label(pref_perc_subset$perc_effort) <- "En Chile, las personas son recompensadas por sus esfuerzos"
var_label(pref_perc_subset$perc_talent) <- "En Chile, las personas son recompensadas por su inteligencia y habilidad"
var_label(pref_perc_subset$perc_rich_parents) <- "En Chile, a quienes tienen padres ricos les va mucho mejor en la vida"
var_label(pref_perc_subset$pref_contact) <- "En Chile, quienes tienen buenos contactos les va mejor en la vida"
var_label(pref_perc_subset$perc_contact) <- "En Chile, quienes tienen buenos contactos les va mejor en la vida"
var_label(pref_perc_subset$pref_effort) <- "Quienes más se esfuerzan deberían obtener mayores recompensas que quienes se esfuerzan menos"
var_label(pref_perc_subset$pref_talent) <- "Quienes poseen más talento deberían obtener mayores recompensas que quienes poseen menos talento"
var_label(pref_perc_subset$pref_rich_parents) <- "Está bien que quienes tienen padres ricos les vaya bien en la vida"
var_label(pref_perc_subset$pref_contact) <- "Esta bien que quienes tienen buenos contactos les vaya bien en la vida"
d$valid <- NULL
df$valid <- NULL
df %>%
kable(format = "html", caption = "Valores variables preferencias y percepciones ola 1 y 2") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE, position = "center") %>%
column_spec(1, bold = TRUE, color = "black") %>%
add_header_above(c(" " = 1, "Preferencias" = 3)) # Agrupar columnas
df <- df[, !(names(df) %in% c("Valid"))]
df$Variable <- NULL # delete variable column
df %>%
kable(format = "html", caption = "Valores variables preferencias y percepciones ola 1 y 2") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE, position = "center") %>%
column_spec(1, bold = TRUE, color = "black") %>%
add_header_above(c(" " = 1, "Preferencias" = 3)) # Agrupar columnas
just_market <- db_long %>%       #crear subset
select(just_health, just_pension. just_educ) %>%
just_market <- db_long %>%       #crear subset
select(just_health, just_pension, just_educ) %>%
as.data.frame()
just_market <- db_long %>%       #crear subset
select(just_health, just_pension, just_educ) %>%
as.data.frame()
View(just_market)
just_market <- just_market %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
'1' = "Muy en desacuerdo",
'2' = "En desacuerdo",
'3' = "De acuerdo",
'4' = "Muy de acuerdo")
)
)
View(just_market)
var_label(just_market$just_health) <- "Está bien que aquellos que puedan pagar más tengan mejor acceso a salud"
var_label(just_market$just_pension) <- "Está bien que en Chile, las personas con mayores ingresos puedan tener mejores pensiones que las personas de ingresos más bajos"
var_label(just_market$just_educ) <- "Está bien que aquellos que puedan pagar más tengan mejor educación"
pref_perc<-dfSummary(pref_perc_subset[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.70,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
pref_perc$Variable <- NULL # delete variable column
pref_perc
just_market_table<-dfSummary(just_market[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.70,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
just_market_table$Variable <- NULL # delete variable column
just_market_table
load(file = here("Input", "data", "db_long_proc.RData"))
pacman::p_load(tidyverse,
sjmisc,
sjPlot,
here,
lavaan,
psych,
corrplot,
ggdist,
patchwork,
sjlabelled,
semTools,
gtools,
RColorBrewer,
skimr,
readxl,
dplyr,
summarytools,
labelled,
kableExtra)
options(scipen=999)
rm(list = ls())
load(file = here("Input", "data", "db_long_proc.RData"))
just_market <- db_long %>%       #crear subset
select(just_health, just_pension, just_educ,mjp) %>%
as.data.frame()
just_market <- just_market %>%
mutate(
across(
c(just_health, just_pension, just_educ), # Aplica a todas las columnas
~ recode(.,
'1' = "Muy en desacuerdo",
'2' = "En desacuerdo",
'3' = "De acuerdo",
'4' = "Muy de acuerdo")
)
)
var_label(just_market$just_health) <- "Está bien que aquellos que puedan pagar más tengan mejor acceso a salud"
var_label(just_market$just_pension) <- "Está bien que en Chile, las personas con mayores ingresos puedan tener mejores pensiones que las personas de ingresos más bajos"
var_label(just_market$just_educ) <- "Está bien que aquellos que puedan pagar más tengan mejor educación"
var_label(just_market$mjp) <- "Market Justice Preference"
just_market_table<-dfSummary(just_market[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.70,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
just_market_table$Variable <- NULL # delete variable column
just_market_table
just_market <- db_long %>%       #crear subset
select(just_health, just_pension, just_educ) %>%
as.data.frame()
just_market <- just_market %>%
mutate(
across(
everything(), # Aplica a todas las columnas
~ recode(.,
'1' = "Muy en desacuerdo",
'2' = "En desacuerdo",
'3' = "De acuerdo",
'4' = "Muy de acuerdo")
)
)
var_label(just_market$just_pension) <- "Está bien que en Chile, las personas con mayores ingresos puedan tener mejores pensiones que las personas de ingresos más bajos"
var_label(just_market$just_educ) <- "Está bien que aquellos que puedan pagar más tengan mejor educación"
just_market_table<-dfSummary(just_market[,],
plain.ascii = FALSE,
style = "multiline",
tmp.img.dir = "/tmp",
graph.magnif = 0.70,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = F, # plot
valid.col = T, # n valido
col.widths = c(30,10,10,10))
just_market_table$Variable <- NULL # delete variable column
just_market_table
